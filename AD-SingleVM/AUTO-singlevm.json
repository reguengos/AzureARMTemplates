{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "minLength": 1,
            "type": "String",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "dnsNameForPublicIP": {
            "minLength": 1,
            "type": "String",
            "metadata": {
                "description": "Globally unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "vmSize": {
            "defaultValue": "Standard_A1",
            "allowedValues": [
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_B2s",
                "Standard_B2ms",
                 "Standard_B4ms",
                "Standard_D2_V2",
                "Standard_D2_v3"
            ],
            "minLength": 1,
            "type": "String",
            "metadata": {
                "description": "Vm Size"
            }
        },
        "vmRegion": {
            "defaultValue": "westeurope",
            "allowedValues": [
                "westeurope",
                "northeurope",
                "eastus"
            ],
            "minLength": 1,
            "type": "String",
            "metadata": {
                "description": "Vm Region"
            }
        },
        "vmName": {
            "minLength": 1,
            "type": "String",
            "metadata": {
                "description": "Vm Name"
            }
        },
        "ScriptsLocationUrl": {
            "minLength": 1,
            "type": "String",
            "metadata": {
                "description": "Scripts location Url"
            }
        },
        "Scriptsaccountname": {
            "minLength": 1,
            "type": "String",
            "metadata": {
                "description": "Scripts account name"
            }
        },
        "saKey": {
            "minLength": 1,
            "type": "String",
            "metadata": {
                "description": "sa Key"
            }
        },
        "imageName": {
            "defaultValue": "360i-BASE-IMAGE",
            "minLength": 1,
            "type": "String",
            "metadata": {
                "description": "Custom Image Name."
            }
        },
        "imageRGName": {
            "defaultValue": "MGMT_360imprimir-RG",
            "minLength": 1,
            "type": "String",
            "metadata": {
                "description": "Custom Image RG Name Repo."
            }
        },
        "Team": {
            "minLength": 1,
            "type": "String",
            "metadata": {
                "description": "Team Name"
            }
        },
        "subnetName": {
            "minLength": 1,
            "type": "String",
            "metadata": {
                "description": "Subnet Name"
            }
        },
        "virtualNetworkName": {
            "type": "String",
            "metadata": {
                "description": "Vm Name"
            }
        },
        "virtualNetworkRGName": {
            "minLength": 1,
            "type": "String",
            "metadata": {
                "description": "Vm Name"
            }
        },
        "windowsOSVersion": {
            "defaultValue": "2016-Datacenter",
            "allowedValues": [
                "2008-R2-SP1",
                "2012-Datacenter",
                "2012-R2-Datacenter",
                "2016-Nano-Server",
                "2016-Datacenter-with-Containers",
                "2016-Datacenter"
            ],
            "type": "String",
            "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
            }
        },
        "modulesUrl": {
            "defaultValue": "https://eus2oaasibizamarketprod1.blob.core.windows.net/automationdscpreview/RegistrationMetaConfigV2.zip",
            "type": "String",
            "metadata": {
                "description": "URL for the DSC configuration package. NOTE: Can be a Github url(raw) to the zip file (this is the default value)"
            }
        },
        "configurationFunction": {
            "defaultValue": "RegistrationMetaConfigV2.ps1\\RegistrationMetaConfigV2",
            "type": "String",
            "metadata": {
                "description": "DSC configuration function to call. Should contain filename and function in format fileName.ps1\\configurationfunction"
            }
        },
        "registrationKey": {
            "type": "SecureString",
            "metadata": {
                "description": "Registration key to use to onboard to the Azure Automation DSC pull/reporting server"
            }
        },
        "registrationUrl": {
            "type": "String",
            "metadata": {
                "description": "Registration url of the Azure Automation DSC pull/reporting server"
            }
        },
        "nodeConfigurationName": {
            "type": "String",
            "metadata": {
                "description": "The name of the node configuration, on the Azure Automation DSC pull server, that this node will be configured as"
            }
        },
        "configurationMode": {
            "defaultValue": "ApplyAndMonitor",
            "allowedValues": [
                "ApplyOnly",
                "ApplyAndMonitor",
                "ApplyAndAutoCorrect"
            ],
            "type": "String",
            "metadata": {
                "description": "DSC agent (LCM) configuration mode setting. ApplyOnly, ApplyAndMonitor, or ApplyAndAutoCorrect"
            }
        },
        "tentacleCommunicationMode": {
            "defaultValue": "Poll",
            "allowedValues": [
                "Poll",
                "Listen"
            ],
            "type": "String",
            "metadata": {
                "description": "DSC agent (LCM) refresh frequency setting, in minutes"
            }
        },
        "configurationModeFrequencyMins": {
            "defaultValue": 15,
            "type": "Int",
            "metadata": {
                "description": "DSC agent (LCM) configuration mode frequency setting, in minutes"
            }
        },
        "refreshFrequencyMins": {
            "defaultValue": 30,
            "type": "Int",
            "metadata": {
                "description": "DSC agent (LCM) refresh frequency setting, in minutes"
            }
        },
        "rebootNodeIfNeeded": {
            "defaultValue": true,
            "type": "Bool",
            "metadata": {
                "description": "DSC agent (LCM) rebootNodeIfNeeded setting"
            }
        },
        "actionAfterReboot": {
            "defaultValue": "ContinueConfiguration",
            "allowedValues": [
                "ContinueConfiguration",
                "StopConfiguration"
            ],
            "type": "String",
            "metadata": {
                "description": "DSC agent (LCM) actionAfterReboot setting. ContinueConfiguration or StopConfiguration"
            }
        },
        "allowModuleOverwrite": {
            "defaultValue": false,
            "type": "Bool",
            "metadata": {
                "description": "DSC agent (LCM) allowModuleOverwrite setting"
            }
        },
        "timestamp": {
            "type": "String",
            "metadata": {
                "description": "The current datetime, as a string, to force the request to go through ARM even if all fields are the same as last ARM deployment of this template; example in parameters file is in MM/dd/yyyy H:mm:ss tt format"
            }
        }
    },
    "variables": {
        "apiversion":"2017-03-01",
        "imagePublisher": "MicrosoftWindowsServer",
         "pipId":"[resourceId( parameters('imageRGName'),'Microsoft.Network/publicIPAddresses', parameters('vmName'))]",		
        "imageOffer": "WindowsServer",
        "nicName": "[concat(variables('vmName'),'nic')]",
        "subnetName": "[parameters('subnetName')]",
        "vhdStorageType": "Standard_LRS",
        "publicIPAddressName": "[variables('vmName')]",
        "publicIPAddressType": "Dynamic",
        "vhdStorageContainerName": "vhds",
        "vmName": "[parameters('vmName')]",
        "extensionName": "octopustentaclecustom",
        "csename": "[concat(parameters('vmName'), variables('extensionName'))]",
        "vmSize": "[parameters('vmSize')]",
        "virtualNetworkName": "[parameters('virtualNetworkName')]",
        "ImageId": "[resourceId( parameters('imageRGName'),'Microsoft.Compute/images', parameters('imageName'))]",
        "vnetId": "[resourceId( parameters('virtualNetworkRGName'),'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('subnetName'))]",
        "vhdStorageAccountName": "[concat('vhdsa', variables('vmName'))]",
        "diagnosticsStorageAccountName": "[variables('vhdStorageAccountName')]",
        "wadmetricsresourceid": "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]",
        "OSDiskName": "[concat(variables('vmName'),'osdisk')]"
    },
    "resources": [

    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[concat(parameters('vmName'),'-AS')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[parameters('vmRegion')]",
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 2,
        "managed": true
      }
    },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2016-03-30",
            "location": "[parameters('vmRegion')]",
            "tags": {
                "displayName": "NetworkInterface"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId( parameters('imageRGName'),'Microsoft.Network/publicIPAddresses', parameters('vmName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmName')]",
            "apiVersion": "2017-03-30",
            "location": "[parameters('vmRegion')]",
            "tags": {
                "Autostart": "yes",
                "Environment": "Autogen"
            },
            "properties": {
                
                "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',concat(parameters('vmName'),'-AS'))]"
        },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "id": "[variables('ImageId')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "name": "[concat(parameters('vmName'), '-OsDisk')]"
                    }
                },

                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "false"

                    }
                }
            },
            "dependsOn": [

                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
                "[concat('Microsoft.Compute/availabilitySets/', concat(parameters('vmName'),'-AS'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmName'),'/Microsoft.Powershell.DSC')]",
            "apiVersion": "2015-06-15",
            "location": "[parameters('vmRegion')]",
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.19",
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                    "Items": {
                        "registrationKeyPrivate": "[parameters('registrationKey')]"
                    }
                },
                "settings": {
                    "ModulesUrl": "[parameters('modulesUrl')]",
                    "SasToken": "",
                    "ConfigurationFunction": "[parameters('configurationFunction')]",
                    "Properties": [
                        {
                            "Name": "RegistrationKey",
                            "Value": {
                                "UserName": "PLACEHOLDER_DONOTUSE",
                                "Password": "PrivateSettingsRef:registrationKeyPrivate"
                            },
                            "TypeName": "System.Management.Automation.PSCredential"
                        },
                        {
                            "Name": "RegistrationUrl",
                            "Value": "[parameters('registrationUrl')]",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "NodeConfigurationName",
                            "Value": "[parameters('nodeConfigurationName')]",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "ConfigurationMode",
                            "Value": "[parameters('configurationMode')]",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "ConfigurationModeFrequencyMins",
                            "Value": "[parameters('configurationModeFrequencyMins')]",
                            "TypeName": "System.Int32"
                        },
                        {
                            "Name": "RefreshFrequencyMins",
                            "Value": "[parameters('refreshFrequencyMins')]",
                            "TypeName": "System.Int32"
                        },
                        {
                            "Name": "RebootNodeIfNeeded",
                            "Value": "[parameters('rebootNodeIfNeeded')]",
                            "TypeName": "System.Boolean"
                        },
                        {
                            "Name": "ActionAfterReboot",
                            "Value": "[parameters('actionAfterReboot')]",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "AllowModuleOverwrite",
                            "Value": "[parameters('allowModuleOverwrite')]",
                            "TypeName": "System.Boolean"
                        },
                        {
                            "Name": "Timestamp",
                            "Value": "[parameters('timestamp')]",
                            "TypeName": "System.String"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmName'),'/octopustentaclecustom')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('vmRegion')]",
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.7",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[concat(parameters('ScriptsLocationUrl'), 'start.ps1')]"
                    ],
                    "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File start.ps1"
                },
                "protectedSettings": 
                {
                    "storageAccountName": "[parameters('Scriptsaccountname')]",
                    "storageAccountKey": "[parameters('saKey')]"
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
            ]
        },
        {
            "type": "Microsoft.DevTestLab/schedules",
            "name": "[concat('shutdown-computevm-',parameters('vmName'))]",
            "apiVersion": "2016-05-15",
            "location": "[parameters('vmRegion')]",
            "properties": {
                "status": "Enabled",
                "taskType": "ComputeVmShutdownTask",
                "dailyRecurrence": {
                    "time": "2000"
                },
                "timeZoneId": "GMT Standard Time",
                "notificationSettings": {
                    "status": "Disabled",
                    "timeInMinutes": 15
                },
                "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines',concat(parameters('vmName')))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
            ]
        }
    ],
	"outputs": {
		"ServerPIP": {
			"type": "String",
			"value": "[reference(variables('pipId'),variables('apiversion') ).dnsSettings.fqdn]"
		},
		"ThumbprintValue": {
			"type": "String",
			"value": "[reference(resourceId('Microsoft.Compute/virtualMachines/extensions',parameters('vmName'),  variables('extensionName'))).instanceView.substatuses[0].message]"
		}
	}
}